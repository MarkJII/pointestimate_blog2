success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = everything())
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything()))
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
blogdown::stop_server()
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
muate(A = case_when(A == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
mutate(A = case_when(A == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
mutate(Var1 = case_when(Var1 == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
mutate(success = case_when(Var1 == 1 & Var2 == 1 ~ 'Yes', TRUE ~ 'No')) %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
mutate(Var1 = case_when(Var1 == 0 ~ 'Fail', TRUE ~ 'Success'),
Var2 = case_when(Var2 == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
success = "Success",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
group_by(Var1, Var2, success) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
mutate(Var1 = case_when(Var1 == 0 ~ 'Fail', TRUE ~ 'Success'),
Var2 = case_when(Var2 == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
generate_sequence <- function(seq_length, probability) {
success_length <- round(seq_length * probability)
failure_length <- seq_length - success_length
success <- rep(1, success_length)
failure <- rep(0, failure_length)
c(success, failure)
}
a <- generate_sequence(seq_length = 100, probability = .5)
b <- generate_sequence(seq_length = 100, probability = .5)
expand.grid(a, b) %>%
as_tibble() %>%
group_by(Var1, Var2) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(probability = n / sum(n)) %>%
select(-n) %>%
mutate(Var1 = case_when(Var1 == 0 ~ 'Fail', TRUE ~ 'Success'),
Var2 = case_when(Var2 == 0 ~ 'Fail', TRUE ~ 'Success')) %>%
gt() %>%
fmt_percent(
columns = probability,
decimals = 0
) %>%
cols_label(
Var1 = "A",
Var2 = "B",
probability = 'Probability'
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_column_labels(columns = everything())
)
simmed_binom <- rbinom(1000, 100 ,.98) %>%
as_tibble() %>%
mutate(value = value/100,
run_prod = cumprod(value),
count = row_number())
simmed_binom %>%
filter(run_prod > .4) %>%
tail()
simmed_binom %>%
ggplot(aes(x = count, y = run_prod))+
geom_line()
source("~/R/Odds Explainer.R", echo=TRUE)
seq(1:1000)
seq(1:1000) %>%
as_tibble()
seq(1:1000) %>%
as_tibble() %>%
mutate(success-odds = .99 ^ value)
seq(1:1000) %>%
as_tibble() %>%
mutate(success_odds = .99 ^ value)
seq(1:1000) %>%
as_tibble() %>%
mutate(success_odds = .999 ^ value)
seq(1:1000) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people)
seq(1:1000) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odd))+
geom_line()+
theme_ipsum()
seq(1:1000) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()
seq(1:1000) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .9999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)
seq(1:1500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .9999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)
t <- seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people)
View(t)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')
.99^105
.999^105
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')+
scale_y_continuous(labels = scales::percent)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')+
scale_y_continuous(labels = scales::percent_format(scale = 1))
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')+
scale_y_continuous(labels = scales::percent)
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')+
scale_y_continuous(labels = scales::percent_format(accuracy = 5L))
seq(1:500) %>%
as_tibble() %>%
rename(people = value) %>%
mutate(success_odds = .999 ^ people) %>%
ggplot(aes(x = people, y = success_odds))+
geom_line()+
theme_ipsum()+
geom_hline(yintercept = .9)+
xlab('People')+
ylab('Odds of Success')+
scale_y_continuous(labels = scales::percent_format(accuracy = 5L))
103469+82455+52788
(103469+82455+52788)*10
(103469+82455+52788)*100
(103469+82455+52788)*100 - us_population
(103469+82455+52788)*100 - 331449281
331449281
(103469+82455+52788)*100
331449281
(103469+82455+52788)*1000
us_population_above_21 <- (103469+82455+52788)*1000
high_trust_percentage <- 0.005
like_hydra_percentage <- 0.001
us_population <- 331449281
us_population_above_21 <- (103469+82455+52788)*1000
high_trust_percentage <- 0.005
like_hydra_percentage <- 0.001
us_population_above_21 * high_trust_percentage * like_hydra_percentage
(103469+82455+52788)*1000
0.005 * 0.001
us_population <- 331449281
us_population_above_21 <- (103469+82455+52788)*1000
high_trust_percentage <- 0.005
like_hydra_percentage <- 0.001
us_population_above_21 * (high_trust_percentage * like_hydra_percentage)
.999^1194
blogdown::serve_site()
blogdown::build_site()
blogdown::check_site()
blogdown::stop_server()
blogdown::build_site()
